on:
  workflow_call:
    inputs:
      type:
        description: "the expected lint entrypoint"
        default: "make"
        required: false
        type: string
      python-version:
        description: "the version of Python to configure, if any (can be SemVer-formatted)"
        default: ""
        required: false
        type: string
      cargo-sort:
        description: "run cargo-sort as part of Rust linting"
        default: false
        required: false
        type: boolean

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: configure python, if required
        if: inputs.python-version != ''
        uses: actions/setup-python@v4
        with:
          python-version: "${{ inputs.python-version }}"
          cache: "pip"
          cache-dependency-path: pyproject.toml

      - name: configure rust and clippy, if required
        if: inputs.type == 'rust'
        run: |
          # we always run the latest stable Rust and Clippy for Rust linting.
          rustup update
          rustup component add clippy

      - name: run clippy (rust)
        uses: actions-rs/clippy-check@v1.0.7
        if: inputs.type == 'rust'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

      - name: run cargo sort (rust)
        if: inputs.type == 'rust' && inputs.cargo-sort == 'true'
        run: |
          cargo install cargo-sort
          cargo sort -c

      - name: run lint (make)
        if: inputs.type == 'make'
        run: |
          make lint
